{"version":3,"sources":["assets/images/bench_1.jpg","components/app/header/navbar/navbar.js","components/app/header/header.js","components/app/body/description/description.js","components/app/body/work-experience/work-experience.js","components/app/body/projects/projects.js","components/app/body/landing/display/display.js","components/app/body/landing/landing.js","components/app/body/body.js","components/app/app.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","classes","this","props","className","navbar","Tabs","centered","Tab","label","prevScrollPosition","window","pageYOffset","onscroll","currentScrollPos","document","getElementsByClassName","style","top","React","Component","withStyles","theme","width","display","flexDirection","alignItems","justifyContent","fontSize","fontFamily","position","color","zIndex","transition","Header","appHeader","backgroundColor","height","Description","description","Grid","container","spacing","item","xs","minHeight","minWidth","paper","WorkExperience","workExperience","Projects","projects","Display","src","bench","Landing","landing","boxShadow","Body","body","App","app","overflow","textAlign","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c62040a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bench_1.c6b7d24f.jpg\";","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = theme => ({\n    navbar: {\n        width: '100vw',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 'calc(1px + 2vmin)',\n        fontFamily:  'Raleway, sans-serif',\n        position: 'fixed',\n        color: 'white',\n        zIndex: 1,\n        transition: 'top 0.3s', \n    },\n});\n\nclass Navbar extends React.Component {\n    render() {\n        const { classes } = this.props;\n       \n\n        return (\n            <div className={classes.navbar}>\n                <Tabs\n                    // value={value}\n                    // indicatorColor=\"primary\"\n                    // textColor=\"primary\"\n                    // onChange={handleChange}\n                    centered\n                >\n                    <Tab label=\"Me\" />\n                    <Tab label=\"About\" />\n                    <Tab label=\"Projects\" />\n                </Tabs>\n            </div>\n        );\n    }\n    componentDidMount() {\n        var prevScrollPosition = window.pageYOffset;\n        const { classes } = this.props;\n        window.onscroll = function () {\n            var currentScrollPos = window.pageYOffset;\n            if (prevScrollPosition > currentScrollPos) {\n                document.getElementsByClassName(classes.navbar)[0].style.top = \"0\";\n            } else {\n                document.getElementsByClassName(classes.navbar)[0].style.top = \"-50px\";\n            }\n            prevScrollPosition = currentScrollPos;\n        }\n    }\n}\n\nNavbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Navbar);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Navbar from \"./navbar/index\"\n\nconst styles = theme => ({\n  appHeader: {\n    backgroundColor: '#282c34',\n    top: 0,\n    height: '50px',\n    zIndex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'calc(20px + 2vmin)',\n    color: 'white',\n    fontFamily: 'Inria Serif, serif',\n  }\n});\n\nclass Header extends React.Component {\n  render() {\n    const { classes } = this.props;\n      return (\n        <div>\n          <header className ={classes.appHeader}>\n            <Navbar/>\n          </header>\n        </div>  \n      );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = theme => ({\n    description: {\n        minHeight: '100vh',\n        minWidth: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 'calc(10px + 2vmin)',\n        color: 'white',\n    },\n    paper: {\n        minHeight: '90vh',\n    }\n});\n\nclass Description extends React.Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.description}>\n                <Grid container spacing={0}>\n                    <Grid item xs={4}>\n                        \n                    </Grid>\n                    <Grid item xs={8}>\n                        Computer Science student at McGill University.\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Description);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = theme => ({\n    workExperience: {\n        minHeight: '95vh',\n        minWidth: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 'calc(10px + 2vmin)',\n        color: 'white',\n        backgroundColor: \"#282c34\"\n    },\n    paper: {\n        minHeight: '90vh',\n    }\n});\n\nclass WorkExperience extends React.Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.workExperience}>\n\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(WorkExperience);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = theme => ({\n    projects: {\n        minHeight: '95vh',\n        minWidth: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 'calc(10px + 2vmin)',\n        color: 'white',\n        // background: \"linear-gradient(to bottom, rgba(0,0,0,0.9) 0%,rgba(0,0,0,0.3) 100%),url(\"+ McGillImage + \")\",\n        // backgroundRepeat: \"no-repeat\"\n    },\n    paper: {\n        minHeight: '90vh',\n    }\n});\n\nclass Projects extends React.Component {\n    render() {\n        const { classes }  = this.props;\n        return (\n            <div className={classes.projects}>\n               \n            </div>\n        );\n    }\n}\n\nProjects.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Projects);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport bench  from \"../../../../../assets/images/bench_1.jpg\";\nimport \"./display.scss\";\n\n\nconst Display = () =>  {\n\n    return (\n        <div className=\"body-landing-display\">\n            <img src={bench} />\n        </div>\n    );\n}\n\nexport default Display;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from '@material-ui/styles';\nimport Display from \"./display/index\"\nimport { shadows } from '@material-ui/system';\nimport Box from '@material-ui/core/Box';\n\n\nconst styles = theme => ({\n    landing: {\n        minHeight: '100vh - 50px',\n        minWidth: '100vw',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 'calc(5px + 2vmin)',\n        fontFamily: 'Merriweather, serif',\n        color: 'white',\n        boxShadow: \"rgba(0, 0, 0, 0.2) 0px 3px 1px 2px, rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px\",\n    },\n});\n\nclass Landing extends React.Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                    <Grid container spacing={0} className={classes.landing}>\n                        <Grid item xs={6}>\n                            Me<br /><br /><br />\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit <br /><br />\n                            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br /><br />\n                            Ut enim ad minim veniam, quis nostrud exercitation ullamco <br /><br />\n                            Ut enim ad minim veniam, quis nostrud exercitation ullamco <br /><br />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Display />\n                        </Grid>\n                    </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Landing);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Description from './description/index';\nimport WorkExperience from './work-experience/index';\nimport Projects from './projects/index';\nimport { withStyles } from '@material-ui/styles';\nimport Landing from './landing/index';\n\nconst styles = theme => ({\n    body: {\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 'calc(10px + 2vmin)',\n        color: 'white',\n        backgroundColor: '#282c34',\n    }\n\n});\n\nclass Body extends React.Component {\n    render() {\n        const {classes} = this.props\n        return (\n            <div className={classes.body}>\n                <body>\n                    <Landing/>\n                    <Description/>\n                    {/* <WorkExperience/> */}\n                    {/* <Projects/> */}\n                </body>\n            </div>\n        );\n    }\n}\n\nBody.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default withStyles(styles)(Body);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Header from './header/index';\nimport Body from './body/index';\n\nconst styles = theme => ({\n    app: {\n        position: 'absolute',\n        overflow: 'auto',\n        textAlign: 'center',\n    },\n});\n\nclass App extends React.Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.app} >\n                <Header/>\n                <Body/>\n            </div>\n        );\n    }\n}\n\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    < App />,\n    document.getElementById('root')\n );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}